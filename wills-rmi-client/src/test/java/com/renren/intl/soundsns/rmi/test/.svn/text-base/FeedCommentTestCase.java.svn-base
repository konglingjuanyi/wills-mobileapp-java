package com.renren.intl.soundsns.rmi.test;

import static org.junit.Assert.assertEquals;

import java.util.List;

import org.junit.Test;

import com.renren.intl.soundsns.model.FeedComment;
import com.renren.intl.soundsns.rmi.client.FeedCommentServiceDelegate;
import com.renren.intl.soundsns.service.IFeedCommentService;

import junit.framework.TestCase;

public class FeedCommentTestCase {
	@Test
	public void testFeedCommentService(){
		
		final IFeedCommentService feedCommentServiceDelegate = new FeedCommentServiceDelegate();
		
		final int userId = 345678;
		final long ugcId = 345678;
		final int ucgUserId = 345678;
		final long voiceCommentContentId = 654321;
		final String commentText =  "test from test case123321";
		final int timeLong = 666;
		final int replyToUserId = 654321;
		final int pageSize = 100;
		
		
		  for (int i = 0; i < 1; i++) {
		         
	            Thread t = new Thread(new Runnable() {
	 
	                @Override
	                public void run() {
	                	int result = 0;
	                	
	                	int voiceSymbol = 0;
	                	int textSymbol = 0;
	                	
	                	//获取刚刚发布的评论
	                	List<FeedComment> fcls = feedCommentServiceDelegate.getFeedCommentsByPage(userId, ugcId, pageSize, System.currentTimeMillis());
	                	if(fcls!=null&&fcls.size()>0)
	                	{
	                		for(FeedComment fc : fcls)
	                		{
	                			if(fc.getCommentType()==1&&fc.getCommentUserId()==userId&&fc.getVoiceCommentContentId()==voiceCommentContentId)
	                				{
	                					voiceSymbol++;
	                				}
	                			if(fc.getCommentType()==2&&fc.getCommentUserId()==userId&&fc.getUgcCommentText().equals(commentText))
	                				{
	                					textSymbol++;
	                				}
	                		}
	                		System.out.println("start: voiceCount = "+voiceSymbol +", textCount = "+textSymbol);
	                	}
	                	else
	                		System.out.println("get comment list from database/redis error");
	                	
	                	
	                	
	                	
	                	
	                	
	                	
	                	
	                	
	                	
	                	
	                	//测试发布评论
	                	
	                	long add = feedCommentServiceDelegate.publishNewVoiceCommentToUgc(userId, ugcId, ucgUserId, voiceCommentContentId, timeLong, null,null,0,null,0);
	                	assertEquals(true, add>0);
	                	if(add>=0)
	                		{
	                			System.out.println("Publish voice comment finished.");
	                			result++;
	                		}
	                	else
	                		System.out.println("Publish voice comment error.");
	                	
	                	add = feedCommentServiceDelegate.publishNewTextCommentToUgc(userId, ugcId, ucgUserId, commentText, null,null,0,null,0);
	                	assertEquals(true, add>0);
	                	if(add>=0)
	                		{
	                			System.out.println("Publish test comment finished.");
	                			result++;
	                		}
	                	else
	                		System.out.println("Publish test comment error.");
	                	
	                	
	                	
	                	long id1 = 0,id2 = 0;
	                	
	                	int voiceSymbolAfter = 0;
	                	int textSymbolAfter = 0;
	                	//获取刚刚发布的评论
	                	List<FeedComment> fcl = feedCommentServiceDelegate.getFeedCommentsByPage(userId, ugcId, pageSize, System.currentTimeMillis());
	                	if(fcl!=null&&fcl.size()>0)
	                	{
	                		for(FeedComment fc : fcl)
	                		{
	                			if(fc.getCommentType()==1&&fc.getCommentUserId()==userId&&fc.getVoiceCommentContentId()==voiceCommentContentId)
	                				{
	                					id1 = fc.getUgcCommentId();
	                					voiceSymbolAfter++;
	                				}
	                			if(fc.getCommentType()==2&&fc.getCommentUserId()==userId&&fc.getUgcCommentText().equals(commentText))
	                				{
	                					id2 = fc.getUgcCommentId();
	                					textSymbolAfter++;
	                				}
	                		}
	                		System.out.println("After : voiceCount = "+voiceSymbolAfter +", textCount = "+textSymbolAfter);
	                		if(voiceSymbolAfter - voiceSymbol == 1)
	                		{
	                			System.out.println("get feed voice comment OK.");
	                			result++;
	                		}
	                		else 
	                		{
	                			System.out.println("get feed voice comment error.");
	                		}
	                		
	                		if(textSymbolAfter - textSymbol ==1)
	                		{
	                			result++;
	                			System.out.println("get feed text comment OK.");
	                		}
	                		else
	                		{
	                			System.out.println("get feed text comment error.");
	                		}
	                		assertEquals(1, voiceSymbolAfter - voiceSymbol);
	                		assertEquals(1, textSymbolAfter - textSymbol);
	                	}
	                	else
	                		System.out.println("get comment list from database/redis error");
	                	
	                	//删除该评论
	                	int del = feedCommentServiceDelegate.deleteFeedCommentById(userId, id1, ugcId);
	                	assertEquals(0, del);
	                	if(del>=0)
	                	{
	                		System.out.println("delete the voice comment successfully.");
	                		result++;
	                	}
	                	else
	                		System.out.println("delete the voice comment error.");
	                	del = feedCommentServiceDelegate.deleteFeedCommentById(userId, id2, ugcId);
	                	assertEquals(0, del);
	                	if(del>=0)
	                	{
	                		System.out.println("delete the text comment successfully.");
	                		result++;
	                	}
	                	else
	                		System.out.println("delete the text comment error.");
	                	
	                	int voiceSymbolEnd = 0;
	                	int textSymbolEnd = 0;
	                	
	                	//获取刚刚发布的评论
	                	List<FeedComment> fclss = feedCommentServiceDelegate.getFeedCommentsByPage(userId, ugcId, pageSize, System.currentTimeMillis());
	                	if(fclss!=null&&fclss.size()>0)
	                	{
	                		for(FeedComment fc : fclss)
	                		{
	                			if(fc.getCommentType()==1&&fc.getCommentUserId()==userId&&fc.getVoiceCommentContentId()==voiceCommentContentId)
	                				{
	                				voiceSymbolEnd++;
	                				}
	                			if(fc.getCommentType()==2&&fc.getCommentUserId()==userId&&fc.getUgcCommentText().equals(commentText))
	                				{
	                				textSymbolEnd++;
	                				}
	                		}
	                		System.out.println("end: voiceCount = "+voiceSymbolEnd +", textCount = "+textSymbolEnd);
	                	}
	                	else
	                		System.out.println("get comment list from database/redis error");
	                	
	                	
	                	if(voiceSymbol == voiceSymbolEnd && voiceSymbolAfter - voiceSymbolEnd == 1&&textSymbol == textSymbolEnd && textSymbolAfter - textSymbolEnd == 1)
	                	{
	                		if(result>=6)
		                	{
		                		assertEquals(true, result>=6);
		                		System.out.println("COMMENT FUNCTION OK.");
		                	}
	                	}
	                }
	            });
	            
	            t.start();
	            
	            try {
					t.join();
				} catch (InterruptedException e) {
					// TODO 自動生成された catch ブロック
					e.printStackTrace();
				}
		  }
		
		
	}
	
	
	

}
